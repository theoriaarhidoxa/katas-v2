{"version":3,"sources":["components/Pagination.js","str/strings.js","components/Loader.js","context.js","components/Alert.js","components/List.js","components/Item.js","App.js","index.js"],"names":["Pagination","currentPage","pagesArray","onPageClick","onDirClick","className","onClick","map","el","stringData","ALL_KATAS","SINGLE_KATA","KATA_BY_ID","BACKWARDS","Loader","style","AppContext","React","createContext","AppProvider","children","useState","page","setPage","paginator","setPaginator","totalPages","setTotalPages","notify","setNotify","Provider","value","pageNavHelper","num","arrowNavHelper","dir","lt","fetchPagesAmount","pages","i","push","fetchViewed","localStorage","getItem","JSON","parse","beenNotified","notNotified","useContextEveryWhere","useContext","Alert","onCancel","onSubmit","progressValue","setProgressValue","adjustValue","setInterval","setTimeout","clearInterval","max","List","list","setList","itemsPerPage","setItemsPerPage","selectedKataId","setSelectedKataId","name","position","points","userData","setUserData","author","rank","url","kataData","setKataData","recentlyViewed","setRecentlyViewed","emptyQueue","setEmptyQueue","viewBlockVisible","setViewedBlockVisible","alertVisible","setAlertVisible","useEffect","fetchKatas","then","fetchUser","setItem","stringify","listElement","useRef","a","fetch","res","json","katas","data","length","split","cat","fetchById","id","kata","username","topScroller","scroller","scrollTo","duration","delay","smooth","containerId","offset","clearViewedHistory","ref","to","e","kataId","target","classList","toggle","infoHandler","href","title","filter","clearViewedItem","Item","useParams","history","useHistory","getItemById","find","createdAt","replace","tags","join","dangerouslySetInnerHTML","__html","description","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf169cc5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Pagination = ({currentPage, pagesArray, onPageClick, onDirClick}) => {\r\n    return (\r\n        <div className=\"pagination\">\r\n            <div className='pagination__item' onClick={() => onDirClick(currentPage, 'backwards')}>&laquo;</div>\r\n\r\n            {\r\n                pagesArray.map(el => {\r\n                    return (\r\n                        <div key={el} onClick={() => onPageClick(el)}\r\n                             className={el - 1 === currentPage ? 'pagination__item current' : 'pagination__item'}>{el}</div>\r\n                    )\r\n                })\r\n            }\r\n\r\n            <div className='pagination__item' onClick={() => onDirClick(currentPage)}>&raquo;</div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","export const stringData = {\r\n    ALL_KATAS: `https://www.codewars.com/api/v1/users/catchaser/code-challenges/completed?page=`,\r\n    SINGLE_KATA: `https://www.codewars.com/kata/`,\r\n    KATA_BY_ID: `https://www.codewars.com/api/v1/code-challenges/`,\r\n    BACKWARDS: `backwards`\r\n};\r\n","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='loaderWrap'>\r\n            <div className=\"loadingio-spinner-blocks-mty7grqp7kl\">\r\n                <div className=\"ldio-qw2vmiyfhg\">\r\n                    <div style={{\"left\":\"38px\",\"top\":\"38px\",\"animationDelay\":\"0s\"}}/>\r\n                    <div style={{\"left\":\"80px\",\"top\":\"38px\",\"animationDelay\":\"0.125s\"}}/>\r\n                    <div style={{\"left\":\"122px\",\"top\":\"38px\",\"animationDelay\":\"0.25s\"}}/>\r\n                    <div style={{\"left\":\"38px\",\"top\":\"80px\",\"animationDelay\":\"0.875s\"}}/>\r\n                    <div style={{\"left\":\"122px\",\"top\":\"80px\",\"animationDelay\":\"0.375s\"}}/>\r\n                    <div style={{\"left\":\"38px\",\"top\":\"122px\",\"animationDelay\":\"0.75s\"}}/>\r\n                    <div style={{\"left\":\"80px\",\"top\":\"122px\",\"animationDelay\":\"0.625s\"}}/>\r\n                    <div style={{\"left\":\"122px\",\"top\":\"122px\",\"animationDelay\":\"0.5s\"}}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React, {useState, useContext} from 'react';\r\nimport {stringData} from \"./str/strings\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({children}) => {\r\n    const [page, setPage] = useState(0);\r\n    const [paginator, setPaginator] = useState([]);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [notify, setNotify] = useState(false);\r\n\r\n    const pageNavHelper = num => {\r\n        setPage(num - 1);\r\n    };\r\n\r\n    const arrowNavHelper = (num, dir) => {\r\n        const lt = dir === stringData.BACKWARDS;\r\n        switch (num) {\r\n            case 0:\r\n                setPage(lt ? totalPages - 1 : page + 1);\r\n                break;\r\n            case totalPages - 1:\r\n                setPage(lt ? page - 1 : 0);\r\n                break;\r\n            default:\r\n                setPage(lt ? page - 1 : page + 1);\r\n                break;\r\n        }\r\n    };\r\n\r\n    const fetchPagesAmount = value => {\r\n        setTotalPages(value);\r\n        const pages = [];\r\n        for (let i = 1; i <= value; i++) {\r\n            pages.push(i);\r\n        }\r\n        setPaginator(pages);\r\n    };\r\n\r\n    const fetchViewed = () => {\r\n        return localStorage.getItem('recentlyViewed') ? JSON.parse(localStorage.getItem('recentlyViewed')) : [];\r\n    };\r\n\r\n    const beenNotified = () => {\r\n        setNotify(true);\r\n    };\r\n\r\n    const notNotified = () => {\r\n        setNotify(false);\r\n    };\r\n\r\n    return <AppContext.Provider value={{page, totalPages, paginator, pageNavHelper, arrowNavHelper, fetchPagesAmount, fetchViewed, notify, beenNotified, notNotified}}>{children}</AppContext.Provider>\r\n};\r\n\r\nexport const useContextEveryWhere = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport {AppContext, AppProvider};\r\n","import React, {useState} from 'react';\r\nimport './Alert.scss';\r\nimport {useContextEveryWhere} from \"../context\";\r\n\r\nconst Alert = ({onCancel, onSubmit}) => {\r\n    const {notify, notNotified} = useContextEveryWhere();\r\n    const [progressValue, setProgressValue] = useState(0);\r\n\r\n    const clearHistory = () => {\r\n        onSubmit();\r\n        const adjustValue = setInterval(() => {\r\n            if (progressValue < 101) {\r\n                setProgressValue(progressValue => progressValue + 1);\r\n            }\r\n        }, 10);\r\n\r\n        setTimeout(() => {\r\n            clearInterval(adjustValue);\r\n        }, 1100);\r\n\r\n        setTimeout(() => {\r\n            notNotified();\r\n        }, 2000);\r\n    };\r\n\r\n    return (\r\n        <div className={notify ? 'alert' : 'alert animated'}>\r\n            <i onClick={() => onCancel()}>&times;</i>\r\n            <p>История просмотров заполнена.<br /> Для продолжения необходимо очистить её.</p>\r\n            <button onClick={clearHistory} className='btn'>Очистить</button>\r\n            <progress value={progressValue} max=\"100\">70 %</progress>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","import './App.scss';\nimport React, {useState, useEffect, useRef} from \"react\";\nimport Pagination from \"./Pagination\";\nimport {Element, scroller} from 'react-scroll'; // https://www.npmjs.com/package/react-scroll https://www.pluralsight.com/guides/scrolling-inside-a-div-in-react\nimport {stringData} from \"../str/strings\";\nimport {Link} from 'react-router-dom';\nimport Loader from \"./Loader\";\nimport Alert from \"./Alert\";\nimport {useContextEveryWhere} from \"../context\";\n\n\nfunction List() {\n    const {page, totalPages, paginator, pageNavHelper, arrowNavHelper, fetchPagesAmount, fetchViewed, beenNotified} = useContextEveryWhere();\n    const [list, setList] = useState([]);\n    const [itemsPerPage, setItemsPerPage] = useState(0);\n    const [selectedKataId, setSelectedKataId] = useState(null);\n    const [userData, setUserData] = useState({\n        name: null,\n        position: null,\n        points: null\n    });\n    const [kataData, setKataData] = useState({\n        author: null,\n        rank: null,\n        url: null\n    });\n\n    const [recentlyViewed, setRecentlyViewed] = useState(fetchViewed());\n    const [emptyQueue, setEmptyQueue] = useState(false);\n    const [viewBlockVisible, setViewedBlockVisible] = useState(localStorage.getItem('viewBlockVisible') ? JSON.parse(localStorage.getItem('viewBlockVisible')) : true);\n    const [alertVisible, setAlertVisible] = useState(true);\n\n\n    useEffect(() => {\n        fetchKatas().then();\n    }, [page]);\n\n    useEffect(() => {\n        fetchUser().then();\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('recentlyViewed', JSON.stringify(recentlyViewed));\n    }, [recentlyViewed]);\n\n    useEffect(() => {\n        localStorage.setItem('viewBlockVisible', JSON.stringify(viewBlockVisible));\n    }, [viewBlockVisible]);\n\n    const listElement = useRef();\n\n    const fetchKatas = async () => {\n        const res = await fetch(`${stringData.ALL_KATAS}${page}`);\n        const katas = await res.json();\n        setList(katas.data);\n        fetchPagesAmount(katas['totalPages']);\n        setItemsPerPage(katas.data.length);\n    };\n\n    const fetchUser = async () => {\n        const res = await fetch(`${stringData.ALL_KATAS.split('code-')[0]}`);\n        const cat = await res.json();\n        setUserData({\n            name: cat['username'],\n            position: cat['leaderboardPosition'],\n            points: cat['honor'],\n        });\n    };\n\n    const fetchById = async id => {\n        const res = await fetch(`${stringData.KATA_BY_ID}${id}`);\n        const kata = await res.json();\n        setKataData({\n            author: kata['createdBy'].username,\n            rank: kata['rank'].name,\n            url: kata['url']\n        });\n    };\n\n    const pageNav = num => {\n        pageNavHelper(num);\n        topScroller();\n        setSelectedKataId(null);\n    };\n\n    const arrowNav = (num, dir) => {\n        arrowNavHelper(num, dir, totalPages);\n        topScroller();\n        setSelectedKataId(null);\n    };\n\n    const topScroller = () => {\n        scroller.scrollTo('scrollTopPosition', {\n            duration: 1500,\n            delay: 100,\n            smooth: true,\n            containerId: 'myScrollToElement',\n            offset: -50, // Scrolls to element + 50 pixels down the page\n        })\n    };\n\n    const infoHandler = (e, kataId) => {\n        setSelectedKataId(selectedKataId ? null : kataId);\n        e.target.classList.toggle('clicked');\n        fetchById(kataId).then();\n    };\n\n    const clearViewedHistory = () => {\n        setEmptyQueue(() => true);\n        setTimeout(() => {\n            setRecentlyViewed([]);\n        }, 1500);\n    };\n\n    const clearViewedItem = id => {\n        if (recentlyViewed.length < 2) {\n            clearViewedHistory();\n        } else {\n            setRecentlyViewed(recentlyViewed.filter(el => el.id !== id));\n        }\n    };\n\n    const manageViewedVisibility = () => {\n        setViewedBlockVisible(!viewBlockVisible);\n    };\n\n    const handleAlertClosing = () => {\n        clearViewedHistory();\n    };\n\n    const handleAlertCancelling = () => {\n        setAlertVisible(false);\n        beenNotified();\n    };\n\n    // todo реализовать функционал mySelect, если будет подходяший API (как на JSON PlaceHolder)\n\n    return (\n        <>\n            <Pagination currentPage={page} pagesArray={paginator} onPageClick={pageNav} onDirClick={arrowNav}/>\n\n            <p>Расширенный список задач CodeWars.<br/> Вместо ссылок на карточки задач - открытие в дочернем урле.<br/>\n                Просмотренные элементы добавляются в хранилище, которое по достижении определённого количества\n                переполняется, о чём и сообщает.<br/>\n                При возвращении к списку сохраняется текущая позиция в пагинаторе.</p>\n\n            <table className='userData'>\n                <tbody>\n                <tr>\n                    <th>username</th>\n                    <td>{userData.name}</td>\n                </tr>\n                <tr>\n                    <th>position</th>\n                    <td>{userData.position}</td>\n                </tr>\n                <tr>\n                    <th>points</th>\n                    <td>{userData.points}</td>\n                </tr>\n                </tbody>\n            </table>\n\n            <div id='myScrollToElement' className=\"listWrapper\" ref={listElement}>\n                <Element name=\"scrollTopPosition\"/>\n                {!list.length && <Loader/>}\n                {list.map(el => {\n                    const {id, name} = el;\n                    return (\n                        <div key={id}\n                             className={selectedKataId && selectedKataId !== id ? 'listWrapper__item inactive' : 'listWrapper__item'}>\n                            <Link to={`/kata/${id}`}>{name}</Link>\n                            <small\n                                onClick={e => infoHandler(e, id)}>{id === selectedKataId ? 'Скрыть' : 'Подробнее'}</small>\n                            <div className='listWrapper__item-info'>\n                                <ul className={!kataData ? 'blurred' : ''}>\n                                    <li><b>author:</b> {kataData.author}</li>\n                                    <li><b>rank:</b> {kataData.rank}</li>\n                                    <li><b>url:</b> <a href={kataData.url} target='_blank'>{kataData.url}</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n            <small>Элементов на странице: <b>{itemsPerPage}</b>.</small>\n            <span className='scrollTop' onClick={topScroller}>scroll</span>\n\n            {!!recentlyViewed.length && viewBlockVisible && <div className={emptyQueue ? 'cloud animated' : 'cloud'}>\n                <p className='cloud__title'>Просмотренные ката ({recentlyViewed.length}):</p>\n                <ul className='cloud__list'>\n                    {recentlyViewed.map(el => {\n                        const {id, title} = el;\n                        return (\n                            <li key={id} className='cloud__list-item'><a href={`https://www.codewars.com/kata/${id}`}\n                                                                         target='_blank'>{title}</a><span\n                                onClick={() => clearViewedItem(id)}>Удалить &times;</span></li>\n                        )\n                    })}\n                </ul>\n                <span className='cloud__clear btn' onClick={clearViewedHistory}>Очистить историю просмотров</span>\n            </div>}\n\n            {recentlyViewed.length > 9 && viewBlockVisible && alertVisible &&\n            <Alert onCancel={handleAlertCancelling} onSubmit={handleAlertClosing}/>}\n            <div className={viewBlockVisible ? 'toggleViewedBlock active' : 'toggleViewedBlock'}\n                 onClick={manageViewedVisibility}>\n                <span><i/></span> <p>Показывать историю просмотров</p>\n            </div>\n        </>\n    );\n}\n\nexport default List;\n","import React, {useState, useEffect} from 'react';\r\nimport {stringData} from \"../../src/str/strings\";\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport {useContextEveryWhere} from \"../context\";\r\n\r\nconst Item = () => {\r\n    const {fetchViewed} = useContextEveryWhere();\r\n    const [kataData, setKataData] = useState(null);\r\n    const {kataId} = useParams();\r\n    const history = useHistory();\r\n    const [recentlyViewed, setRecentlyViewed] = useState(fetchViewed());\r\n\r\n    const getItemById = async id => {\r\n        const res = await fetch(`${stringData.KATA_BY_ID}/${id}`);\r\n        const data = await res.json();\r\n        setKataData(data);\r\n        if (!recentlyViewed.find(el => el.id === data.id)) {\r\n            setRecentlyViewed([...recentlyViewed, {id: data.id, title: data.name}]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getItemById(kataId).then();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('recentlyViewed', JSON.stringify(recentlyViewed));\r\n    }, [recentlyViewed]);\r\n\r\n    return (\r\n\r\n        <div className='wrapper__singleKata'>\r\n            {kataData ?\r\n                <>\r\n                    <button className='btn' onClick={() => history.push('/')}>Назад к списку</button>\r\n                    <h2>{kataData.name}</h2>\r\n                    <b>{kataData.createdAt.split('T')[0].replace(/\\-/g, '.')}</b>\r\n                    <p><b>Tags</b>: {kataData.tags.join(', ')}</p>\r\n                    <div>\r\n                        {<div dangerouslySetInnerHTML={{__html: kataData.description.replace(/\\n/g, '<br>')}} />}\r\n                    </div>\r\n\r\n                </>\r\n                : ''}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Item;\r\n","import './components/App.scss';\nimport React from \"react\";\nimport {BrowserRouter, HashRouter, Switch, Route} from 'react-router-dom';\nimport List from \"./components/List\";\nimport Item from \"./components/Item\";\n\n\nfunction App() {\n    return (\n        <div className='wrapper'>\n            <HashRouter>\n                <Switch>\n                    <Route path='/' exact component={List}/>\n                    <Route path='/kata/:kataId' component={Item}/>\n                </Switch>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n\n/* router implementations:\nhttps://www.freecodecamp.org/news/deploy-a-react-app-to-github-pages/\nhttps://create-react-app.dev/docs/deployment/#github-pages-https-pagesgithubcom\n*/\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {AppProvider} from './context';\n\nReactDOM.render(\n    <React.StrictMode>\n        <AppProvider>\n            <App/>\n        </AppProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}